(component
  (type (;0;)
    (instance
      (type (;0;) (record (field "foo" u8)))
      (export (;1;) "foo" (type (eq 0)))
      (type (;2;) (func (result 1)))
      (export (;0;) "my-func1" (func (type 2)))
      (type (;3;) (func (result 1)))
      (export (;1;) "my-func2" (func (type 3)))
    )
  )
  (import "example:example/my-interface" (instance (;0;) (type 0)))
  (type (;1;)
    (component
      (type (;0;)
        (instance
          (type (;0;) (record (field "foo" u8)))
          (export (;1;) "foo" (type (eq 0)))
          (type (;2;) (func (result 1)))
          (export (;0;) "my-func1" (func (type 2)))
        )
      )
      (import "example:example/my-interface" (instance (;0;) (type 0)))
    )
  )
  (import "unlocked-dep=<example:component1>" (component (;0;) (type 1)))
  (instance (;1;) (instantiate 0
      (with "example:example/my-interface" (instance 0))
    )
  )
  (type (;2;)
    (component
      (type (;0;)
        (instance
          (type (;0;) (record (field "foo" u8)))
          (export (;1;) "foo" (type (eq 0)))
          (type (;2;) (func (result 1)))
          (export (;0;) "my-func2" (func (type 2)))
        )
      )
      (import "example:example/my-interface" (instance (;0;) (type 0)))
      (type (;1;)
        (instance
          (type (;0;) (record (field "foo" u8)))
          (export (;1;) "foo" (type (eq 0)))
          (type (;2;) (func (result 1)))
          (export (;0;) "my-func2" (func (type 2)))
        )
      )
      (export (;1;) "example:example/my-interface" (instance (type 1)))
    )
  )
  (import "unlocked-dep=<example:component2>" (component (;1;) (type 2)))
  (instance (;2;) (instantiate 1
      (with "example:example/my-interface" (instance 0))
    )
  )
  (alias export 2 "example:example/my-interface" (instance (;3;)))
  (export (;4;) "example:example/my-interface" (instance 3))
)
